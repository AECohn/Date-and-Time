//Programmer Aviv Cohn
#CATEGORY "46" "Aviv's Modules" // Custom
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#User_SimplSharp_Library "Schedule"

Digital_Input _Skip_, Save_Schedule, Recall_Schedule, Include_Weekends, Delay_Scheduled_Event;
Digital_Output _Skip_, Weekends_Included, Event_Elapsed;
String_Input  Event_Input[128];
String_Output Event_Feedback;
integer lock;


string_parameter  Filename[128];

Schedule_class mySchedule;

function Recall_Scheduled_Event()
  {
	Weekends_Included = mySchedule.Include_Weekends;
    Event_Feedback = mySchedule.Read_Schedule();
  }

Push Delay_Scheduled_Event
	{
        mySchedule.Delay_Schedule(1);
	}
	

Push Recall_Schedule
  {
    Recall_Scheduled_Event();
  }



Push Save_Schedule
  {
	    mySchedule.Include_Weekends = Include_Weekends;
      myschedule.Scheduled_Time = Event_Input;
    	Recall_Scheduled_Event();
  }
                        

 eventhandler Event_Callback(Schedule_class sender, EventArgs e)
  {
     if(lock = off)
  		{
      	Pulse(0, Event_Elapsed);
  			lock = on;
  			wait(6000) //wait 1 minute
  			{
                   lock = off;
  				}
  		}	
  }

function main()
  {
	mySchedule.filename = Filename;
     RegisterEvent(mySchedule, Update, Event_Callback);
     Recall_Scheduled_Event();
  }









