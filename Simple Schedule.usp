//Programmer Aviv Cohn
#CATEGORY "46" "Aviv's Modules" // Custom
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#User_SimplSharp_Library "Schedule"

String_Input  Event_Input[128];
String_Output Event_Feedback;
Digital_Input Recall_Schedule;
Digital_Output Event_Elapsed;
integer lock;

string_parameter _skip_, _skip_, Filename[128];

Schedule_class mySchedule;

function Recall_Scheduled_Shutdown()
  {
    Event_Feedback = mySchedule.Read_Schedule();
  }

Push Recall_Schedule
  {
    Recall_Scheduled_Shutdown();
  }



Change Event_Input
  {
      myschedule.Scheduled_Time = Event_Input;
      Event_Feedback = myschedule.Scheduled_Time;
  }
                        

 eventhandler Event_Callback(Schedule_class sender, EventArgs e)
  {
     if(lock = off)
  		{
      	Pulse(0, Event_Elapsed);
  			lock = on;
  			wait(6000) //wait 1 minute
  			{
                   lock = off;
  				}
  		}	
  }

function main()
  {
	mySchedule.filename = Filename;
     RegisterEvent(mySchedule, Update, Event_Callback);
     Recall_Scheduled_Shutdown();
  }









